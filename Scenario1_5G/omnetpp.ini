[General]
image-path=../../../images
sim-time-limit=100s
**.routingRecorder.enabled = false

network = SingleCell

############### Statistics ##################
output-scalar-file = ${resultdir}/${repetition}.sca
output-vector-file = ${resultdir}/${repetition}.vec
seed-set = ${repetition}
**.vector-recording = true

#repeat = 5

################ Mobility parameters #####################
# *

**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m
**.mobility.initFromDisplayString = false


############### Number of Resource Blocks ################
**.numBands = 4 # this value should be kept equal to the number of RBs

#**.mtu = 65535B
**.cellularNic.**.queueSize = 0B

############### Transmission Power ##################
**.ueTxPower = 76
**.eNodeBTxPower = 50
**.targetBler = 0.01
**.blerShift = 5  

############### IPv4 configurator config #################
*.configurator.config = xmldoc("./demo.xml")


############### e/gNodeB configuration #################
# group - left
**.gnb1.mobility.initialX = 150m
**.gnb1.mobility.initialY = 225m
**.gnb2.mobility.initialX = 600m
**.gnb2.mobility.initialY = 225m
**.gnb3.mobility.initialX = 150m
**.gnb3.mobility.initialY = 425m
**.gnb4.mobility.initialX = 600m
**.gnb4.mobility.initialY = 425m
# group - right
**.gnb5.mobility.initialX = 350m
**.gnb5.mobility.initialY = 225m
**.gnb6.mobility.initialX = 800m
**.gnb6.mobility.initialY = 225m
**.gnb7.mobility.initialX = 350m
**.gnb7.mobility.initialY = 425m
**.gnb8.mobility.initialX = 800m
**.gnb8.mobility.initialY = 425m

# connect the UE's NIC to the corresponding serving eNB
*.ueArea1[0..2].macCellId = 1
*.ueArea1[0..2].masterId = 1
*.ueArea1[0..2].nrMacCellId = 1
*.ueArea1[0..2].nrMasterId = 1
*.ueArea1[3..4].macCellId = 5
*.ueArea1[3..4].masterId = 5
*.ueArea1[3..4].nrMacCellId = 5
*.ueArea1[3..4].nrMasterId = 5
*.ueArea1[5..6].macCellId = 1
*.ueArea1[5..6].masterId = 1
*.ueArea1[5..6].nrMacCellId = 1
*.ueArea1[5..6].nrMasterId = 1
*.ueArea1[7..9].macCellId = 5
*.ueArea1[7..9].masterId = 5
*.ueArea1[7..9].nrMacCellId = 5
*.ueArea1[7..9].nrMasterId = 5
#--- radio 2
*.ueArea2[0..2].macCellId = 2
*.ueArea2[0..2].masterId = 2
*.ueArea2[0..2].nrMacCellId = 2
*.ueArea2[0..2].nrMasterId = 2
*.ueArea2[3..4].macCellId = 6
*.ueArea2[3..4].masterId = 6
*.ueArea2[3..4].nrMacCellId = 6
*.ueArea2[3..4].nrMasterId = 6
*.ueArea2[5..6].macCellId = 2
*.ueArea2[5..6].masterId = 2
*.ueArea2[5..6].nrMacCellId = 2
*.ueArea2[5..6].nrMasterId = 2
*.ueArea2[7..9].macCellId = 6
*.ueArea2[7..9].masterId = 6
*.ueArea2[7..9].nrMacCellId = 6
*.ueArea2[7..9].nrMasterId = 6
#--- radio 3
*.ueArea3[*].macCellId = 3
*.ueArea3[*].masterId = 3
*.ueArea3[*].nrMacCellId = 3
*.ueArea3[*].nrMasterId = 3
#--- radio 4
*.ueArea4[*].macCellId = 4
*.ueArea4[*].masterId = 4
*.ueArea4[*].nrMacCellId = 4
*.ueArea4[*].nrMasterId = 4


# UE position ---------------------------------------
# all clients
**.ueArea*.mobilityType = "StaticGridMobility"
**.ueArea*.mobility.numHosts = 10
**.ueArea*.mobility.columns = 5
**.ueArea*.mobility.rows = 2
**.ueArea*[*].mobility.marginX = 10m
# top left
**.ueArea1[*].mobility.constraintAreaMinX = 150m
**.ueArea1[*].mobility.constraintAreaMaxX = 350m
**.ueArea1[*].mobility.constraintAreaMinY = 120m
**.ueArea1[*].mobility.constraintAreaMaxY = 330m
# top right
**.ueArea2[*].mobility.constraintAreaMinX = 600m
**.ueArea2[*].mobility.constraintAreaMaxX = 800m
**.ueArea2[*].mobility.constraintAreaMinY = 120m
**.ueArea2[*].mobility.constraintAreaMaxY = 330m
# bottom left
**.ueArea3[*].mobility.constraintAreaMinX = 150m
**.ueArea3[*].mobility.constraintAreaMaxX = 350m
**.ueArea3[*].mobility.constraintAreaMinY = 320m
**.ueArea3[*].mobility.constraintAreaMaxY = 530m
# bottom right
**.ueArea4[*].mobility.constraintAreaMinX = 600m
**.ueArea4[*].mobility.constraintAreaMaxX = 800m
**.ueArea4[*].mobility.constraintAreaMinY = 320m
**.ueArea4[*].mobility.constraintAreaMaxY = 530m
#--------------------------------------------------#

# one UDP application for each user
*.ueArea*[*].numApps = 2

# the amount of UDP applications on server should be equal to (numUEs)*(ue[*].numApps) 
*.server[0].numApps = 20 # 10 host x2 app
*.server[1].numApps = 20
*.server[2].numApps = 10
*.server[3].numApps = 6

# Simula ping
**.ueArea*.app[0].typename = "UdpBasicApp"
**.ueArea1.app[0].destAddresses = "server[0]"
**.ueArea2.app[0].destAddresses = "server[1]"
**.ueArea3.app[0].destAddresses = "server[2]"
**.ueArea4.app[0].destAddresses = "server[3]"

**.ueArea*.app[0].destPort = 800 + int(ancestorIndex(1))


**.ueArea*.app[0].messageLength = 1500B
**.ueArea*.app[0].sendInterval = 25ms #uniform(90ms, 110ms)#normal(100ms, 10ms)
**.ueArea*.app[0].startTime = uniform(3s, 5s)

# consuma ai ping
**.server[0].app[0..9].typename = "UdpSink"
**.server[0].app[0..9].localPort = 800 + int(ancestorIndex(0))
**.server[0].app[0..9].startTime = 1s

**.server[1].app[0..9].typename = "UdpSink"
**.server[1].app[0..9].localPort = 800 + int(ancestorIndex(0))
**.server[1].app[0..9].startTime = 1s

**.server[2].app[0..4].typename = "UdpSink"
**.server[2].app[0..4].localPort = 800 + int(ancestorIndex(0))
**.server[2].app[0..4].startTime = 1s

**.server[3].app[0..2].typename = "UdpSink"
**.server[3].app[0..2].localPort = 800 + int(ancestorIndex(0))
**.server[3].app[0..2].startTime = 1s

# Aggiornamento periodico
**.server[0].app[10..19].typename = "UdpBasicApp"
**.server[1].app[10..19].typename = "UdpBasicApp"
**.server[2].app[5..9].typename = "UdpBasicApp"
**.server[3].app[3..5].typename = "UdpBasicApp"

**.server[0].app[10..19].destAddresses = "SingleCell.ueArea1["+ string(ancestorIndex(0)%10) +"]"
**.server[1].app[10..19].destAddresses = "SingleCell.ueArea2["+ string(ancestorIndex(0)%10) +"]"
**.server[2].app[5..9].destAddresses = "SingleCell.ueArea3["+ string(ancestorIndex(0)%5) +"]"
**.server[3].app[3..5].destAddresses = "SingleCell.ueArea4["+ string(ancestorIndex(0)%3) +"]"

**.server[0].app[10..19].destPort = 90	
**.server[1].app[10..19].destPort = 90	
**.server[2].app[5..9].destPort = 90	
**.server[3].app[3..5].destPort = 90	

**.server[0].app[10..19].localPort = 12000 + int(ancestorIndex(0)%10)
**.server[1].app[10..19].localPort = 12000 + int(ancestorIndex(0)%10)
**.server[2].app[5..9].localPort = 12000 + int(ancestorIndex(0)%5)
**.server[3].app[3..5].localPort = 12000 + int(ancestorIndex(0)%3)

**.server[0].app[10..19].messageLength = 1500B
**.server[1].app[10..19].messageLength = 1500B
**.server[2].app[5..9].messageLength = 1500B
**.server[3].app[3..5].messageLength = 1500B

**.server[0].app[10..19].sendInterval = uniform(20ms, 30ms)
**.server[1].app[10..19].sendInterval = uniform(20ms, 30ms)
**.server[2].app[5..9].sendInterval = uniform(20ms, 30ms)
**.server[3].app[3..5].sendInterval = uniform(20ms, 30ms)

**.server[0].app[10..19].startTime = uniform(0s, 3s)
**.server[1].app[10..19].startTime = uniform(0s, 3s)
**.server[2].app[5..9].startTime = uniform(0s, 3s)
**.server[3].app[3..5].startTime = uniform(0s, 3s)


# Ricevi aggiornamento
**.ueArea*.app[1].typename = "UdpSink"
**.ueArea*.app[1].localPort = 90

