[General]
image-path=../../../images
sim-time-limit=15s
**.routingRecorder.enabled = false

network = SingleCell

############### Statistics ##################
output-scalar-file = ${resultdir}/${repetition}.sca
output-vector-file = ${resultdir}/${repetition}.vec
seed-set = ${repetition}
**.vector-recording = true

#repeat = 5

################ Mobility parameters #####################
# *

**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m
**.mobility.initFromDisplayString = false


############### Number of Resource Blocks ################
**.numBands = 4 # this value should be kept equal to the number of RBs

#**.mtu = 65535B
**.cellularNic.**.queueSize = 0B

############### Transmission Power ##################
**.ueTxPower = 76
**.eNodeBTxPower = 50
**.targetBler = 0.01
**.blerShift = 5  

############### IPv4 configurator config #################
*.configurator.config = xmldoc("./demo.xml")


############### e/gNodeB configuration #################
**.gnb1.mobility.initialX = 250m
**.gnb1.mobility.initialY = 225m
**.gnb2.mobility.initialX = 700m
**.gnb2.mobility.initialY = 225m
**.gnb3.mobility.initialX = 250m
**.gnb3.mobility.initialY = 425m
**.gnb4.mobility.initialX = 700m
**.gnb4.mobility.initialY = 425m

############## UE configuration ##################
*.numUe = 10

# connect the UE's NIC to the corresponding serving eNB
#--- radio 1
*.ueArea1[*].macCellId = 1
*.ueArea1[*].masterId = 1
*.ueArea1[*].nrMacCellId = 1
*.ueArea1[*].nrMasterId = 1
#--- radio 2
*.ueArea2[*].macCellId = 2
*.ueArea2[*].masterId = 2
*.ueArea2[*].nrMacCellId = 2
*.ueArea2[*].nrMasterId = 2
#--- radio 3
*.ueArea3[*].macCellId = 3
*.ueArea3[*].masterId = 3
*.ueArea3[*].nrMacCellId = 3
*.ueArea3[*].nrMasterId = 3
#--- radio 4
*.ueArea4[*].macCellId = 4
*.ueArea4[*].masterId = 4
*.ueArea4[*].nrMacCellId = 4
*.ueArea4[*].nrMasterId = 4


# UE position ---------------------------------------
# all clients
**.ueArea*.mobilityType = "StaticGridMobility"
**.ueArea*.mobility.numHosts = 10
**.ueArea*.mobility.columns = 5
**.ueArea*.mobility.rows = 2
**.ueArea*[*].mobility.marginX = 50m
# top left
**.ueArea1[*].mobility.constraintAreaMinX = 150m
**.ueArea1[*].mobility.constraintAreaMaxX = 350m
**.ueArea1[*].mobility.constraintAreaMinY = 120m
**.ueArea1[*].mobility.constraintAreaMaxY = 330m
# top right
**.ueArea2[*].mobility.constraintAreaMinX = 600m
**.ueArea2[*].mobility.constraintAreaMaxX = 800m
**.ueArea2[*].mobility.constraintAreaMinY = 120m
**.ueArea2[*].mobility.constraintAreaMaxY = 330m
# bottom left
**.ueArea3[*].mobility.constraintAreaMinX = 150m
**.ueArea3[*].mobility.constraintAreaMaxX = 350m
**.ueArea3[*].mobility.constraintAreaMinY = 320m
**.ueArea3[*].mobility.constraintAreaMaxY = 530m
# bottom right
**.ueArea4[*].mobility.constraintAreaMinX = 600m
**.ueArea4[*].mobility.constraintAreaMaxX = 800m
**.ueArea4[*].mobility.constraintAreaMinY = 320m
**.ueArea4[*].mobility.constraintAreaMaxY = 530m
#--------------------------------------------------#

# one UDP application for each user
*.ueArea*[*].numApps = 2

# the amount of UDP applications on server should be equal to (numUEs)*(ue[*].numApps) 
*.server.numApps = 80


# Simula ping
**.ueArea*.app[0].typename = "UdpBasicApp"
**.ueArea*.app[0].destAddresses = "server"
**.ueArea1*.app[0].destPort = 800 + int(ancestorIndex(1))
**.ueArea2*.app[0].destPort = 810 + int(ancestorIndex(1))
**.ueArea3*.app[0].destPort = 820 + int(ancestorIndex(1))
**.ueArea4*.app[0].destPort = 830 + int(ancestorIndex(1))
**.ueArea*.app[0].messageLength = 1000B
**.ueArea*.app[0].sendInterval = normal(100ms, 10ms)
**.ueArea*.app[0].startTime = uniform(1s, 1.5s)
# consuma ai ping
**.server.app[0..39].typename = "UdpSink"
**.server.app[0..39].localPort = 800 + int(ancestorIndex(0))
#**.server.app[0..39].startTime = 1s

# Aggiornamento periodico
**.server.app[40..79].typename = "UdpBasicApp"
**.server.app[40..79].destAddresses = "SingleCell.ueArea" +string(1 + int( (ancestorIndex(0)-40) /10) )+ "["+ string(ancestorIndex(0)%10) +"]"
#**.server.app[40..79].packetName = "AppStream_" + string(ancestorIndex(0)-40)
**.server.app[40..79].destPort = 90	
**.server.app[40..79].localPort = 11000 + 1000* int((ancestorIndex(0)-40)/10) + int(ancestorIndex(0)%10)
**.server.app[40..79].messageLength = 150B
**.server.app[40..79].sendInterval = 1ms
**.server.app[40..79].startTime = uniform(0s, 1s)
# Ricevi aggiornamento
**.ueArea*.app[1].typename = "UdpSink"
**.ueArea*.app[1].localPort = 90

