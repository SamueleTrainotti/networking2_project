[General]
network = SingleCell
image-path=../../images
#tkenv-plugin-path = ../../../inet/etc/plugins
output-scalar-file-append = false
sim-time-limit=50s


############### Statistics ##################
#output-scalar-file = ${resultdir}/${configname}/${repetition}.sca
#output-vector-file = ${resultdir}/${configname}/${repetition}.vec
output-scalar-file = ${resultdir}/${repetition}.sca
output-vector-file = ${resultdir}/${repetition}.vec
seed-set = ${repetition}
**.vector-recording = true

################ Mobility parameters #####################
# *
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m
**.mobility.initFromDisplayString = true

############### Number of Resource Blocks ################
**.numBands = 6 # this value should be kept equal to the number of RBs

############### Transmission Power ##################
**.ueTxPower = 56
**.eNodeBTxPower = 80

############### IPv4 configurator config #################
*.configurator.config = xmldoc("./demo.xml")

#network = simu5g.simulations.networks.SingleCell
description = Multiple device connecting to the same game server.
**.ueArea*.numApps = 3
**.server.numApps = 6

**.numUe = ${numUEs=10}

**.ueArea1*.masterId = 1
**.ueArea1*.macCellId = 1
**.ueArea2*.masterId = 2
**.ueArea2*.macCellId = 2
**.ueArea3*.masterId = 1
**.ueArea3*.macCellId = 1
**.ueArea4*.masterId = 2
**.ueArea4*.macCellId = 2

# all clients
**.ueArea*.mobilityType = "StaticGridMobility"
**.ueArea*.mobility.numHosts = 10
**.ueArea*.mobility.columns = 5
**.ueArea*.mobility.rows = 2
# top left
**.ueArea1[*].mobility.constraintAreaMinX = 150m
**.ueArea1[*].mobility.constraintAreaMaxX = 350m
**.ueArea1[*].mobility.constraintAreaMinY = 150m
**.ueArea1[*].mobility.constraintAreaMaxY = 300m
# top right
**.ueArea2[*].mobility.constraintAreaMinX = 550m
**.ueArea2[*].mobility.constraintAreaMaxX = 750m
**.ueArea2[*].mobility.constraintAreaMinY = 150m
**.ueArea2[*].mobility.constraintAreaMaxY = 300m
# bottom left
**.ueArea3[*].mobility.constraintAreaMinX = 150m
**.ueArea3[*].mobility.constraintAreaMaxX = 350m
**.ueArea3[*].mobility.constraintAreaMinY = 350m
**.ueArea3[*].mobility.constraintAreaMaxY = 500m
# bottom right
**.ueArea4[*].mobility.constraintAreaMinX = 550m
**.ueArea4[*].mobility.constraintAreaMaxX = 750m
**.ueArea4[*].mobility.constraintAreaMinY = 350m
**.ueArea4[*].mobility.constraintAreaMaxY = 500m


# Caricamento partita - client
**.ueArea*.app[0].typename = "UdpVideoStreamClient"
**.ueArea*.app[0].serverAddress = "server"
**.ueArea*.app[0].serverPort = 8000
**.ueArea*.app[0].localPort = 8080
**.ueArea*.app[0].startTime = 0s
#**.ue[*].app[0].messageLength = 100B
# Caricamento partita - server
**.server.app[0].typename = "UdpVideoStreamServer"
**.server.app[0].localPort = 8000
**.server.app[0].sendInterval = uniform(1e-6s, 1.01e-6s)
**.server.app[0].packetLen = 1500B
**.server.app[0].videoSize = 2B 
#**.server.app[0].source.provider[*].packetLength = 100B

# Simula ping
**.ueArea*.app[1].typename = "UdpBasicApp"
**.ueArea*.app[1].destAddresses = "server"
**.ueArea*.app[1].destPort = 9000
**.ueArea*.app[1].messageLength = 1000B
**.ueArea*.app[1].sendInterval = 100ms
**.ueArea*.app[1].startTime = 1s
# consuma ai ping
**.server.app[1].typename = "UdpSink"
**.server.app[1].localPort = 9000
**.server.app[1].destPort = 9000
**.server.app[1].messageLength = 1000B
**.server.app[1].sendInterval = 100ms
**.server.app[1].startTime = 1s

# Aggiornamento periodico
**.server.app[2].typename = "ServerApp"
**.server.app[2].destAddresses = moduleListByPath("**.ueArea1[*]")
**.server.app[2].chooseDestAddrMode = "perSend"
**.server.app[2].destPort = 90	
**.server.app[2].localPort = 11000
**.server.app[2].messageLength = 60000B
**.server.app[2].sendInterval = 1ms		# tempo tra ogni msg del burst
**.server.app[2].burstDuration = 10ms		# tempo durata burst
**.server.app[2].sleepDuration = 6ms		#
**.server.app[2].startTime = uniform(1.0s, 1.5s)
# Aggiornamento periodico
**.server.app[3].typename = "ServerApp"
**.server.app[3].destAddresses = moduleListByPath("**.ueArea2[*]")
**.server.app[3].chooseDestAddrMode = "perSend"
**.server.app[3].destPort = 90	
**.server.app[3].localPort = 12000
**.server.app[3].messageLength = 60000B
**.server.app[3].sendInterval = 1ms		# tempo tra ogni msg del burst
**.server.app[3].burstDuration = 10ms		# tempo durata burst
**.server.app[3].sleepDuration = 6ms		#
**.server.app[3].startTime = uniform(1.0s, 1.5s)
# Aggiornamento periodico
**.server.app[4].typename = "ServerApp"
**.server.app[4].destAddresses = moduleListByPath("**.ueArea3[*]")
**.server.app[4].chooseDestAddrMode = "perSend"
**.server.app[4].destPort = 90	
**.server.app[4].localPort = 13000
**.server.app[4].messageLength = 60000B
**.server.app[4].sendInterval = 1ms		# tempo tra ogni msg del burst
**.server.app[4].burstDuration = 10ms		# tempo durata burst
**.server.app[4].sleepDuration = 6ms		#
**.server.app[4].startTime = uniform(1.0s, 1.5s)
# Aggiornamento periodico
**.server.app[5].typename = "ServerApp"
**.server.app[5].destAddresses = moduleListByPath("**.ueArea4[*]")
**.server.app[5].chooseDestAddrMode = "perSend"
**.server.app[5].destPort = 90	
**.server.app[5].localPort = 14000
**.server.app[5].messageLength = 60000B
**.server.app[5].sendInterval = 1ms		# tempo tra ogni msg del burst
**.server.app[5].burstDuration = 10ms		# tempo durata burst
**.server.app[5].sleepDuration = 6ms		#
**.server.app[5].startTime = uniform(1.0s, 1.5s)
# Ricevi aggiornamento
**.ueArea*.app[2].typename = "UdpSink"
**.ueArea*.app[2].localPort = 90

#
#*.server.app[*].destAddress = "ue["+string(ancestorIndex(0))+"]" # obtain the address of the client by reading its index in the array of udp Apps
#*.server.app[*].localPort = 3088+ancestorIndex(0) 


